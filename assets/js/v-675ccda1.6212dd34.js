"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3040],{31007:(e,i,s)=>{s.r(i),s.d(i,{default:()=>r});var n=s(78e3);const a=[(0,n.uE)('<p>An ADempiere Process is a piece of code which run on a user interface action such as clicking on a button. This example gives an outline of a sample process and its usage. You can create the method derived from SvrProcess class.</p><h2 id="main-methods" tabindex="-1"><a class="header-anchor" href="#main-methods" aria-hidden="true">#</a> Main Methods</h2><h3 id="prepare-method" tabindex="-1"><a class="header-anchor" href="#prepare-method" aria-hidden="true">#</a> Prepare Method</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/**\n  * The prepare function is called first and is used to load parameters\n  * which are passed to the process by the framework. Parameters to be\n  * passed are configured in Report &amp; Process -&gt; Parameter.\n  * \n  */\n @Override\n protected void prepare() {\n\n  ...\n  int recordId = getRecord_ID();\n  ...\n }\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="doit-method" tabindex="-1"><a class="header-anchor" href="#doit-method" aria-hidden="true">#</a> DoIt Method</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> \n /**\n  * Post process actions (outside trx).\n  * Please note that at this point the transaction is committed so\n  * you can&#39;t rollback.\n  * This method is useful if you need to do some custom work when \n  * the process complete the work (e.g. open some windows).\n  *  \n  * @param success true if the process was success\n  * @since 3.1.4\n  */\n @Override\n protected void postProcess(boolean success) {\n  if (success) {\n   \n  } else {\n              \n  }\n }\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2><ul><li><a href="a">Calling a process from code</a></li><li><a href="a">Howto write an Adempiere process</a></li></ul>',8)],t={},r=(0,s(13860).Z)(t,[["render",function(e,i){return(0,n.wg)(),(0,n.iD)("div",null,a)}]])},55225:(e,i,s)=>{s.r(i),s.d(i,{data:()=>n});const n=JSON.parse('{"key":"v-675ccda1","path":"/community/wiki/developers-guide/process.html","title":"Process","lang":"en-US","frontmatter":{"title":"Process","category":["Community"],"star":9,"sticky":9,"tag":["Wiki","Developer\'s Guide"],"article":false,"summary":"An ADempiere Process is a piece of code which run on a user interface action such as clicking on a button. This example gives an outline of a sample process and its usage. You can ","head":[["meta",{"property":"og:url","content":"https://github.com/adempiere/adempiere-site.github.io/community/wiki/developers-guide/process.html"}],["meta",{"property":"og:title","content":"Process"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-25T14:41:16.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"es-ES"}],["meta",{"property":"article:tag","content":"Wiki"}],["meta",{"property":"article:tag","content":"Developer\'s Guide"}],["meta",{"property":"article:modified_time","content":"2023-08-25T14:41:16.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Main Methods","slug":"main-methods","children":[{"level":3,"title":"Prepare Method","slug":"prepare-method","children":[]},{"level":3,"title":"DoIt Method","slug":"doit-method","children":[]}]},{"level":2,"title":"See also","slug":"see-also","children":[]}],"git":{"createdTime":1692974476000,"updatedTime":1692974476000,"contributors":[{"name":"Jes√∫s Albujas","email":"134967453+tecnicoerp@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.55,"words":165},"filePathRelative":"community/wiki/developers-guide/process.md","localizedDate":"August 25, 2023"}')}}]);