"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4124],{71623:(e,t,l)=>{l.r(t),l.d(t,{default:()=>U});var a=l(78e3);const i=(0,a.uE)('<h2 id="creating-the-rule" tabindex="-1"><a class="header-anchor" href="#creating-the-rule" aria-hidden="true">#</a> Creating the Rule</h2><p>Within the script you can use:</p><ul><li>Window context variables start with a W_ prefix</li><li>Login context variables start with G_ prefix</li><li>Parameters for callout start with A_ prefix <ul><li>A_WindowNo</li><li>A_Tab</li><li>A_Field</li><li>A_Value</li><li>A_OldValue</li><li>A_Ctx</li></ul></li></ul><p><img src="/assets/img/community/developers-guide/01_BeanShell.png" alt="BeanShell"></p><h2 id="configure-callout-from-table-column" tabindex="-1"><a class="header-anchor" href="#configure-callout-from-table-column" aria-hidden="true">#</a> Configure Callout from Table/Column</h2><p><img src="/assets/img/community/developers-guide/02_BeanShellCallout.png" alt="BeanShell2"></p>',6),n=(0,a.Uk)("This Callout can also be called from the "),r=(0,a.Uk)("Report & Process Window"),o=(0,a.Uk)(". Just remember to set in the Rule window from which Event Type are you calling this Rule Script."),s=(0,a.uE)('<h2 id="sample-code-provided-for-copy-paste-testing" tabindex="-1"><a class="header-anchor" href="#sample-code-provided-for-copy-paste-testing" aria-hidden="true">#</a> Sample Code provided for copy/paste testing</h2><p>On the Table and Column, callout reference:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>@script:beanshell:BP_fillDescriptionFromName\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>On the Rule Search Key:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>if (A_Tab.getValue(&quot;Name&quot;) != null) {\n    A_Tab.setValue(&quot;Description&quot;, A_Tab.getValue(&quot;Name&quot;));\n}\nresult = &quot;&quot;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sample-code-for-setting-payment-bank-account" tabindex="-1"><a class="header-anchor" href="#sample-code-for-setting-payment-bank-account" aria-hidden="true">#</a> Sample Code for Setting Payment Bank Account</h2><p>This script will set the bank account on the Payment window based on the Tender Type and Credit Card Type.</p><p>On the Payment Table and Column, callout reference for Tender Type and Credit Card Type:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>@script:beanshell:payment_setpaymentprocessor\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>On the Rule Search Key:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>beanshell:payment_setpaymentprocessor\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>On the Rule Script:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import org.compiere.model.MPayment;\n\nif(A_Tab.getValue(&quot;TenderType&quot;) != null &amp;&amp; A_Tab.getValue(&quot;CreditCardType&quot;) != null &amp;&amp; A_Tab.getValue(&quot;CreditCardType&quot;) != &quot;&quot;)\n{\n   MPayment pmt = new MPayment(A_Ctx, 0,null);\n   pmt.setTenderType(A_Tab.getValue(&quot;TenderType&quot;));\n   pmt.setC_Currency_ID(A_Tab.getValue(&quot;C_Currency_ID&quot;));\n   pmt.setCreditCardType(A_Tab.getValue(&quot;CreditCardType&quot;));\n   pmt.setPaymentProcessor();\n   A_Tab.setValue(&quot;C_BankAccount_ID&quot;, pmt.getC_BankAccount_ID());\n   pmt = null;\n}\nelse\n{\n   A_Tab.setValue(&quot;C_BankAccount_ID&quot;, 0);\n}    \nresult=&quot;&quot;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scripting-languages" tabindex="-1"><a class="header-anchor" href="#scripting-languages" aria-hidden="true">#</a> Scripting Languages</h2>',14),u=(0,a.Uk)("Now standard Adempiere has uploaded jars to work with "),d={href:"http://groovy.codehaus.org/",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("groovy"),p=(0,a.Uk)(", "),m={href:"http://www.jython.org/Project/index.html",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("jython"),g=(0,a.Uk)(" and "),v={href:"http://www.beanshell.org/",target:"_blank",rel:"noopener noreferrer"},b=(0,a.Uk)("beanshell"),y=(0,a.uE)("<li><p>to call a script from a Callout follow these sample syntax:</p><ul><li>@script:beanshell:ValidateQtyOnHand</li><li>@script:groovy:ValidateQtyOnHand</li><li>@script:jython:ValidateQtyOnHand</li></ul></li><li><p>When you create the rule, you have to set in the Search Key such as:</p><ul><li>Search Key : beanshell:ValidateQtyOnHand</li><li>Search Key : groovy:ValidateQtyOnHand</li><li>Search Key : jython:ValidateQtyOnHand</li></ul></li><li><p>Set the Event Type as Callout and Rule Type as JSR 223 Scripting APIs</p></li>",3),_=(0,a._)("h2",{id:"see-also",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),(0,a.Uk)(" See Also")],-1),f=(0,a.Uk)("Script Process"),C=(0,a.Uk)(" for event rule example from a Report & Process window."),k=(0,a._)("li",null,[(0,a._)("a",{href:"a"},"Script ModelValidatorLogin")],-1),w=(0,a._)("li",null,[(0,a._)("a",{href:"script-modelvalidator"},"Script ModelValidator")],-1),x=(0,a._)("li",null,[(0,a._)("a",{href:"a"},"Rule Engine Implementation")],-1),T={href:"http://scripting.dev.java.net/",target:"_blank",rel:"noopener noreferrer"},S=(0,a.Uk)("Java Scripting"),A=(0,a.Uk)("Callout"),q={href:"https://wiki.adempiere.net/ZH/Case-Study-01-Journal-31",target:"_blank",rel:"noopener noreferrer"},V=(0,a.Uk)("Rule Engine / Script Callout / Script Process"),P=(0,a.Uk)(" - Chinese"),W={},U=(0,l(13860).Z)(W,[["render",function(e,t){const l=(0,a.up)("RouterLink"),W=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[i,(0,a._)("ul",null,[(0,a._)("li",null,[n,(0,a.Wm)(l,{to:"/community/wiki/developers-guide/script-process.html"},{default:(0,a.w5)((()=>[r])),_:1}),o])]),s,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,[u,(0,a._)("a",d,[c,(0,a.Wm)(W)]),p,(0,a._)("a",m,[h,(0,a.Wm)(W)]),g,(0,a._)("a",v,[b,(0,a.Wm)(W)])])]),y]),_,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/community/wiki/developers-guide/script-process.html"},{default:(0,a.w5)((()=>[f])),_:1}),C]),k,w,x,(0,a._)("li",null,[(0,a._)("a",T,[S,(0,a.Wm)(W)])]),(0,a._)("li",null,[(0,a.Wm)(l,{to:"/community/wiki/developers-guide/callout.html"},{default:(0,a.w5)((()=>[A])),_:1})]),(0,a._)("li",null,[(0,a._)("a",q,[V,(0,a.Wm)(W)]),P])])])}]])},58896:(e,t,l)=>{l.r(t),l.d(t,{data:()=>a});const a=JSON.parse('{"key":"v-bcfd1298","path":"/community/wiki/developers-guide/script-callout.html","title":"Script Callout","lang":"en-US","frontmatter":{"title":"Script Callout","category":["Community"],"star":9,"sticky":9,"tag":["Wiki","Developer\'s Guide"],"article":false,"summary":"Creating the Rule Within the script you can use: Window context variables start with a W_ prefix; Login context variables start with G_ prefix; Parameters for callout start with A_","head":[["meta",{"property":"og:url","content":"https://github.com/adempiere/adempiere-site.github.io/community/wiki/developers-guide/script-callout.html"}],["meta",{"property":"og:title","content":"Script Callout"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-25T14:41:16.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"es-ES"}],["meta",{"property":"article:tag","content":"Wiki"}],["meta",{"property":"article:tag","content":"Developer\'s Guide"}],["meta",{"property":"article:modified_time","content":"2023-08-25T14:41:16.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Creating the Rule","slug":"creating-the-rule","children":[]},{"level":2,"title":"Configure Callout from Table/Column","slug":"configure-callout-from-table-column","children":[]},{"level":2,"title":"Sample Code provided for copy/paste testing","slug":"sample-code-provided-for-copy-paste-testing","children":[]},{"level":2,"title":"Sample Code for Setting Payment Bank Account","slug":"sample-code-for-setting-payment-bank-account","children":[]},{"level":2,"title":"Scripting Languages","slug":"scripting-languages","children":[]},{"level":2,"title":"See Also","slug":"see-also","children":[]}],"git":{"createdTime":1692974476000,"updatedTime":1692974476000,"contributors":[{"name":"Jes√∫s Albujas","email":"134967453+tecnicoerp@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.16,"words":347},"filePathRelative":"community/wiki/developers-guide/script-callout.md","localizedDate":"August 25, 2023"}')}}]);