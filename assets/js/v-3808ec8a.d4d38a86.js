"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8548],{11431:(e,t,s)=>{s.r(t),s.d(t,{default:()=>C});var a=s(78e3);const n=(0,a._)("h2",{id:"prerequisites",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),(0,a.Uk)(" Prerequisites")],-1),r=(0,a._)("p",null,"Before launching the Application Server, you should already have completed:",-1),o=(0,a.Uk)("Database Server Installation & Setup"),i=(0,a.Uk)("Application Server Installation & Setup"),l=(0,a.Uk)("Initialize the ADempiere Database"),p=(0,a._)("p",null,"If the above are completed, you can start the JBoss-based ADempiere Application Server. For demonstrations, its fine to launch the server from a console. For production systems, its best to use a method that will keep the server running after the user has logged off.",-1),c=(0,a._)("h2",{id:"run-the-server-as-a-stand-alone-process",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#run-the-server-as-a-stand-alone-process","aria-hidden":"true"},"#"),(0,a.Uk)(" Run the Server as a Stand-Alone Process")],-1),u=(0,a._)("p",null,"To run the ADempiere Server from a console, open up a console window and go to the ADEMPIERE_HOME/utils directory. Run the script RUN_Server2[.bat|.sh] . Then you will see the RUN_Server2 output, such as:",-1),d=(0,a._)("p",null,[(0,a._)("img",{src:"https://github.com/adempiere/adempiere-site/assets/134967453/20e0e12b-b45d-435c-8412-6d092c154b5d",alt:"image"})],-1),h=(0,a.Uk)("If the server started with no errors, you can move on to "),m={href:"https://github.com/docs/introduction/getting-started/launching-the-application",target:"_blank",rel:"noopener noreferrer"},v=(0,a.Uk)("Launching the ADempiere Application"),g=(0,a.Uk)("."),b=(0,a.uE)('<h2 id="as-a-service-on-windows-operating-systems" tabindex="-1"><a class="header-anchor" href="#as-a-service-on-windows-operating-systems" aria-hidden="true">#</a> As a Service on Windows Operating Systems</h2><p>For windows operating systems, the ADempiere Application Server can be installed as a service and scripts are provided for this purpose. Open a DOS shell with Administrative Privileges, navigate to %ADEMPIERE_HOME%\\utils\\windows and run:</p><ul><li>Adempiere_Service_Install.bat for 32-bit systems; or</li><li>Adempiere_Service_Install_64.bat for 64-bit systems (since 380LTS hotfix 2).</li></ul><p>The install sets the start-up options as manual. You will need to open the Services Window (Control Panel→Administrative Tools→Services) to set the properties so the service starts automatically or manually as required for your implmentation.</p><p>(Since 380LTS hotfix 2) On 64-bit systems, the service will log the full console output to ADEMPIERE_HOME\\jboss\\bin\\run.log. As a result, run.log may get large over time. To prevent this, comment out the CONSOLE appender-ref in the ADEMPIERE_HOME\\jboss\\server\\adempiere\\conf\\jboss-log4j.xml file:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">&gt;</span></span>\n     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CONSOLE<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6),k=(0,a.Uk)("Once the Service is running, you can move on to "),f={href:"https://github.com/docs/system-administration/installation/installing-adempiere-manually/launch-the-application-server",target:"_blank",rel:"noopener noreferrer"},y=(0,a.Uk)("Launching the ADempiere Application"),S=(0,a.Uk)("."),A=(0,a.uE)('<h2 id="as-a-service-on-linux" tabindex="-1"><a class="header-anchor" href="#as-a-service-on-linux" aria-hidden="true">#</a> As a Service on Linux</h2><p>ADempiere can be setup a service on Ubuntu using systemd. Create a file called &quot;adempiere.service&quot; under the /lib/systemd/system/ directory</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span> <span class="token assign-left variable">Description</span><span class="token operator">=</span>Task that runs the ADempiere ERP Service <span class="token assign-left variable">After</span><span class="token operator">=</span>network.target <span class="token assign-left variable">After</span><span class="token operator">=</span>systemd-user-sessions.service <span class="token assign-left variable">After</span><span class="token operator">=</span>network-online.target\n<span class="token punctuation">[</span>Service<span class="token punctuation">]</span> <span class="token assign-left variable">Environment</span><span class="token operator">=</span>ADEMPIERE_HOME<span class="token operator">=</span>/opt/Adempiere <span class="token assign-left variable">Type</span><span class="token operator">=</span>forking <span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/opt/Adempiere/utils/RUN_Server2.sh <span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/opt/Adempiere/utils/RUN_Server2Stop.sh <span class="token assign-left variable">TimeoutSec</span><span class="token operator">=</span><span class="token number">30</span> <span class="token assign-left variable">Restart</span><span class="token operator">=</span>on-failure <span class="token assign-left variable">RestartSec</span><span class="token operator">=</span><span class="token number">30</span> <span class="token assign-left variable">StartLimitInterval</span><span class="token operator">=</span><span class="token number">350</span> <span class="token assign-left variable">StartLimitBurst</span><span class="token operator">=</span><span class="token number">10</span>\n<span class="token punctuation">[</span>Install<span class="token punctuation">]</span> <span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With the service defined, you can run the following commands to control it. You will need to run these as root or using <code>sudo</code></p><table><thead><tr><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>systemctl daemon-reload</td><td>Reloads the systemctl daemon to load the new service.</td></tr><tr><td>systemctl start adempiere</td><td>Starts the ADempiere service.</td></tr><tr><td>service adempiere status</td><td>Shows the status of the ADempiere service.</td></tr><tr><td>systemctl enable adempiere</td><td>Enables the ADempiere service to restart on the next reboot/restart event.</td></tr><tr><td>systemctl stop adempiere</td><td>Stops the ADempiere service.</td></tr><tr><td>systemctl disable adempiere</td><td>Turns off the ADempiere service at the next reboot/restart event. Prevents the ADempiere service from restarting.</td></tr><tr><td>systemctl is-enabled adempiere</td><td>Use this to check if the service is currently configured to start or not on the next reboot.</td></tr></tbody></table><div class="custom-container info"><p class="custom-container-title">Note</p><p>The systemd script may fail if the memory runs out. When the heap is full for some reason, the stop script will fail. In that case, try kill -9 using the service PID, wait for a few seconds then start the service again. System Administrators should add a health check to handle this condition.</p></div>',6),_=(0,a.Uk)("If the server started with no errors, you can move on to "),E={href:"https://github.com/docs/introduction/getting-started/launching-the-application",target:"_blank",rel:"noopener noreferrer"},w=(0,a.Uk)("Launching the ADempiere Application"),D=(0,a.Uk)("."),x=(0,a.Uk)("(Thanks to "),U={href:"https://github.com/pmdw",target:"_blank",rel:"noopener noreferrer"},I=(0,a.Uk)("@pmdw"),T=(0,a.Uk)(" and "),R={href:"https://github.com/piracio",target:"_blank",rel:"noopener noreferrer"},L=(0,a.Uk)("Horacio Miranda @piracio"),P=(0,a.Uk)(" for their contribution.)"),M=(0,a.uE)('<h2 id="using-nohup-on-linux-systems" tabindex="-1"><a class="header-anchor" href="#using-nohup-on-linux-systems" aria-hidden="true">#</a> Using nohup on Linux Systems</h2><p>For other operating systems, check ADEMPIERE_HOME/utils/unix or use the Linux nohup command (no hangup) as follows:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">nohup</span> ./RUN_Server2.sh <span class="token operator">&amp;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To see the output of the server, use</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> nohup.out <span class="token operator">|</span> <span class="token function">more</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">tail</span> nohup.out\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',7),O=(0,a.Uk)("If the server started with no errors, you can move on to "),q={href:"https://github.com/docs/introduction/getting-started/launching-the-application",target:"_blank",rel:"noopener noreferrer"},W=(0,a.Uk)("Launching the ADempiere Application"),H=(0,a.Uk)("."),j=(0,a.uE)('<h2 id="trouble-shooting" tabindex="-1"><a class="header-anchor" href="#trouble-shooting" aria-hidden="true">#</a> Trouble Shooting</h2><p>Check the logs for errors.</p><p>For JBoss, the logs are located at ADEMPIERE_HOME/jboss/server/adempiere/logs or ADEMPIERE_HOME/jboss/bin.</p><p>For Tomcat, you will find them in ADEMPIERE_HOME/tomcat/log/Catalina.out.</p><p>The most common problems are with ports that are already in use. Typical conflicting ports are:</p><ul><li><p>HTTP: 80, 443, 8080, 8443</p></li><li><p>RMI : 1098, 1099</p></li></ul><p>For Linux users, sometimes it helps to restart the workstation/server and execute RUN_Server2 as root.</p><p>Any port conflict when starting the Application Server must be resolved!</p><p>If you have errors related to the database, check that the database has been installed, ADempiere data imported and that the database server is running.</p>',9),N={},C=(0,s(13860).Z)(N,[["render",function(e,t){const s=(0,a.up)("RouterLink"),N=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[n,r,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Wm)(s,{to:"/docs/system-administration/installation/database-server-installation-and-setup.html"},{default:(0,a.w5)((()=>[o])),_:1})])]),(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Wm)(s,{to:"/docs/system-administration/installation/application-server-installation-and-setup.html"},{default:(0,a.w5)((()=>[i])),_:1})])]),(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Wm)(s,{to:"/docs/system-administration/installation/initialize-the-database.html"},{default:(0,a.w5)((()=>[l])),_:1})])])]),p,c,u,d,(0,a._)("p",null,[h,(0,a._)("a",m,[v,(0,a.Wm)(N)]),g]),b,(0,a._)("p",null,[k,(0,a._)("a",f,[y,(0,a.Wm)(N)]),S]),A,(0,a._)("p",null,[_,(0,a._)("a",E,[w,(0,a.Wm)(N)]),D]),(0,a._)("p",null,[x,(0,a._)("a",U,[I,(0,a.Wm)(N)]),T,(0,a._)("a",R,[L,(0,a.Wm)(N)]),P]),M,(0,a._)("p",null,[O,(0,a._)("a",q,[W,(0,a.Wm)(N)]),H]),j])}]])},23396:(e,t,s)=>{s.r(t),s.d(t,{data:()=>a});const a=JSON.parse('{"key":"v-3808ec8a","path":"/docs/system-administration/installation/launch-the-application-server.html","title":"Launch the Application Server","lang":"en-US","frontmatter":{"title":"Launch the Application Server","category":["Documentation"],"star":9,"sticky":9,"article":false,"author":"Jesús Albujas","summary":"Prerequisites Before launching the Application Server, you should already have completed: Database Server Installation & Setup; Application Server Installation & Setup; Initialize ","head":[["meta",{"property":"og:url","content":"https://github.com/adempiere/adempiere-site.github.io/docs/system-administration/installation/launch-the-application-server.html"}],["meta",{"property":"og:title","content":"Launch the Application Server"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-12-26T20:09:37.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"es-ES"}],["meta",{"property":"article:author","content":"Jesús Albujas"}],["meta",{"property":"article:modified_time","content":"2023-12-26T20:09:37.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","children":[]},{"level":2,"title":"Run the Server as a Stand-Alone Process","slug":"run-the-server-as-a-stand-alone-process","children":[]},{"level":2,"title":"As a Service on Windows Operating Systems","slug":"as-a-service-on-windows-operating-systems","children":[]},{"level":2,"title":"As a Service on Linux","slug":"as-a-service-on-linux","children":[]},{"level":2,"title":"Using nohup on Linux Systems","slug":"using-nohup-on-linux-systems","children":[]},{"level":2,"title":"Trouble Shooting","slug":"trouble-shooting","children":[]}],"git":{"createdTime":1703621377000,"updatedTime":1703621377000,"contributors":[{"name":"Jesús Albujas","email":"134967453+JesusAlbujas@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.75,"words":825},"filePathRelative":"docs/system-administration/installation/launch-the-application-server.md","localizedDate":"December 26, 2023"}')}}]);